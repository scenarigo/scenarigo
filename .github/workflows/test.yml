name: test
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: [stable, oldstable]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Install Go
      id: setup-go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version: ${{ matrix.go-version }}
        check-latest: true
        cache: false
    - uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      id: go-cache
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: go-${{ matrix.os }}-${{ steps.setup-go.outputs.go-version }}-${{ hashFiles('go.sum') }}
        restore-keys: |
          go-${{ steps.setup-go.outputs.go-version }}-
    - name: Generate codes and plugins
      run: make gen
    - name: Test
      env:
        SCENARIGO_GO_MOD_TIDY_RETRY: 1
      run: make test/ci
    - uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      if: github.ref_name == 'main'
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ steps.go-cache.outputs.cache-primary-key }}
    - name: Upload cmd coverage
      if: matrix.os == 'ubuntu-latest' && startsWith(matrix.go-version, 'stable')
      uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        disable_search: true
        files: ./coverage-cmd.out
        flags: cmd
        fail_ci_if_error: true
    - name: Upload module coverage
      if: matrix.os == 'ubuntu-latest' && startsWith(matrix.go-version, 'stable')
      uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        disable_search: true
        files: ./coverage-module.out
        flags: module
        fail_ci_if_error: true

  test-yaml-tag:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Install Go
      id: setup-go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version: stable
        check-latest: true
        cache: false
    - uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      id: go-cache
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: go-ubuntu-latest-${{ steps.setup-go.outputs.go-version }}-${{ hashFiles('go.sum') }}
        restore-keys: |
          go-${{ steps.setup-go.outputs.go-version }}-
    - name: Generate codes
      run: make gen/proto
    - name: Add yaml tag
      run: make add-yaml-tag
    - name: Generate plugins
      run: make gen/plugins
    - name: Test
      run: make test/ci
