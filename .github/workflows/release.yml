name: release
on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    - "v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+"
permissions:
  contents: write
jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.matrix.outputs.versions }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install Go
      id: setup-go
      uses: actions/setup-go@v5
      with:
        go-version: stable
        check-latest: true
        cache: false
    - uses: actions/cache/restore@v4.2.4
      id: go-cache
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: go-ubuntu-latest-${{ steps.setup-go.outputs.go-version }}-${{ hashFiles('go.sum') }}
        restore-keys: |
          go-${{ steps.setup-go.outputs.go-version }}-
    - name: Generate matrix
      id: matrix
      working-directory: ${{ github.workspace }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -eu
        versions=$(make matrix)
        echo $versions
        echo "versions=$versions" >> $GITHUB_OUTPUT
  build:
    needs: matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: ${{ fromJson(needs.matrix.outputs.go-version) }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install Go
      id: setup-go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        check-latest: true
        cache: false
    - uses: actions/cache/restore@v4.2.4
      id: go-cache
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: go-ubuntu-latest-${{ steps.setup-go.outputs.go-version }}-${{ hashFiles('go.sum') }}
        restore-keys: |
          go-${{ steps.setup-go.outputs.go-version }}-
    - name: Build
      working-directory: ${{ github.workspace }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: GO_VERSION=${{ matrix.go-version }} make build/ci
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifact-${{ matrix.go-version }}
        path: ${{ github.workspace }}/dist/
  goreleaser:
    if: ${{ always() }}
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: go/src/github.com/${{ github.repository }}
    - name: Install Go
      id: setup-go
      uses: actions/setup-go@v5
      with:
        go-version: stable
        check-latest: true
        cache: false
    - uses: actions/cache/restore@v4.2.4
      id: go-cache
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: go-ubuntu-latest-${{ steps.setup-go.outputs.go-version }}-${{ hashFiles('go.sum') }}
        restore-keys: |
          go-${{ steps.setup-go.outputs.go-version }}-
    - uses: actions/download-artifact@v5
      with:
        path: ./go/src/github.com/${{ github.repository }}/dist/
    - name: Move artifacts
      working-directory: ./go/src/github.com/${{ github.repository }}
      run: |
        set -eu
        mkdir ./assets/
        cat ./dist/**/*_checksums.txt > ./assets/checksums.txt
        mv ./dist/**/*.tar.gz ./assets/
        ls ./assets/
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        version: latest
        args: release --clean -f ./scripts/cross-build/.goreleaser.yml
        workdir: ./go/src/github.com/${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
