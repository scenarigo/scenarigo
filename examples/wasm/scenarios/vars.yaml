schemaVersion: scenario/v1
plugins:
  plugin: plugin.wasm
vars:
  target: '{{ plugins.plugin.ServerAddr }}'
  int: '{{ plugins.plugin.Int }}'
  slice: '{{ plugins.plugin.Slice }}'
  map: '{{ plugins.plugin.Map }}'
  struct: '{{ plugins.plugin.Struct }}'
  structptr: '{{ plugins.plugin.StructPtr }}'
  t: '{{ plugins.plugin.NewT() }}'
  text: test
  cc: '{{ plugins.plugin.PassContext(ctx) }}'
title: use global variables
steps:
  - title: set
    ref: '{{plugins.plugin.SetVar("key", "value")}}'
    bind:
      vars:
        key: '{{vars.key}}'

  - title: dump
    ref: '{{plugins.plugin.DumpVarsStep}}'
    vars:
      message: |-
        {{plugins.plugin.Join <-}}:
          prefix: preout-
          text: |-
            {{plugins.plugin.Join <-}}:
              prefix: prein-
              text: '{{vars.text}}'
              suffix: -sufin
          suffix: -sufout
  - title: Ping
    protocol: grpc
    request:
      target: '{{ vars.target }}'
      service: scenarigo.examples.wasm.service.Ping
      method: Ping
    expect:
      status:
        code: OK
    bind:
      vars:
        print_int: '{{ plugins.plugin.Println(vars.int) }}'
        print_map: '{{ plugins.plugin.Println(vars.map) }}'
        print_map_a: '{{ plugins.plugin.Println(vars.map.a) }}'
        print_map_b: '{{ plugins.plugin.Println(vars.map.b) }}'
        print_struct_x: '{{ plugins.plugin.Println(vars.struct.X) }}'
        print_structptr_x: '{{ plugins.plugin.Println(vars.structptr.X) }}'
        set_x: '{{ vars.t.SetValue(10) }}'
        get_x: '{{ vars.t.GetValue() }}'

  - ref: '{{plugins.plugin.Sleep("2s")}}'
    timeout: 1ns
    postTimeoutWaitingLimit: 1s

